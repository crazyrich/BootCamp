//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IRCTC_Client_Q4.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/Q4_IRCTC_Service")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Ticket_CountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationStation {
            get {
                return this.DestinationStationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationStationField, value) != true)) {
                    this.DestinationStationField = value;
                    this.RaisePropertyChanged("DestinationStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceStation {
            get {
                return this.SourceStationField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceStationField, value) != true)) {
                    this.SourceStationField = value;
                    this.RaisePropertyChanged("SourceStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ticket_Count {
            get {
                return this.Ticket_CountField;
            }
            set {
                if ((this.Ticket_CountField.Equals(value) != true)) {
                    this.Ticket_CountField = value;
                    this.RaisePropertyChanged("Ticket_Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReservation")]
    public interface IReservation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/AllTicket", ReplyAction="http://tempuri.org/IReservation/AllTicketResponse")]
        IRCTC_Client_Q4.ServiceReference1.Ticket[] AllTicket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/AllTicket", ReplyAction="http://tempuri.org/IReservation/AllTicketResponse")]
        System.Threading.Tasks.Task<IRCTC_Client_Q4.ServiceReference1.Ticket[]> AllTicketAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/BookTicket", ReplyAction="http://tempuri.org/IReservation/BookTicketResponse")]
        void BookTicket([System.ServiceModel.MessageParameterAttribute(Name="bookTicket")] IRCTC_Client_Q4.ServiceReference1.Ticket bookTicket1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/BookTicket", ReplyAction="http://tempuri.org/IReservation/BookTicketResponse")]
        System.Threading.Tasks.Task BookTicketAsync(IRCTC_Client_Q4.ServiceReference1.Ticket bookTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/CheckStatus", ReplyAction="http://tempuri.org/IReservation/CheckStatusResponse")]
        IRCTC_Client_Q4.ServiceReference1.Ticket CheckStatus(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/CheckStatus", ReplyAction="http://tempuri.org/IReservation/CheckStatusResponse")]
        System.Threading.Tasks.Task<IRCTC_Client_Q4.ServiceReference1.Ticket> CheckStatusAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/CancelTicket", ReplyAction="http://tempuri.org/IReservation/CancelTicketResponse")]
        void CancelTicket(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservation/CancelTicket", ReplyAction="http://tempuri.org/IReservation/CancelTicketResponse")]
        System.Threading.Tasks.Task CancelTicketAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReservationChannel : IRCTC_Client_Q4.ServiceReference1.IReservation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReservationClient : System.ServiceModel.ClientBase<IRCTC_Client_Q4.ServiceReference1.IReservation>, IRCTC_Client_Q4.ServiceReference1.IReservation {
        
        public ReservationClient() {
        }
        
        public ReservationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReservationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IRCTC_Client_Q4.ServiceReference1.Ticket[] AllTicket() {
            return base.Channel.AllTicket();
        }
        
        public System.Threading.Tasks.Task<IRCTC_Client_Q4.ServiceReference1.Ticket[]> AllTicketAsync() {
            return base.Channel.AllTicketAsync();
        }
        
        public void BookTicket(IRCTC_Client_Q4.ServiceReference1.Ticket bookTicket1) {
            base.Channel.BookTicket(bookTicket1);
        }
        
        public System.Threading.Tasks.Task BookTicketAsync(IRCTC_Client_Q4.ServiceReference1.Ticket bookTicket) {
            return base.Channel.BookTicketAsync(bookTicket);
        }
        
        public IRCTC_Client_Q4.ServiceReference1.Ticket CheckStatus(int Id) {
            return base.Channel.CheckStatus(Id);
        }
        
        public System.Threading.Tasks.Task<IRCTC_Client_Q4.ServiceReference1.Ticket> CheckStatusAsync(int Id) {
            return base.Channel.CheckStatusAsync(Id);
        }
        
        public void CancelTicket(int Id) {
            base.Channel.CancelTicket(Id);
        }
        
        public System.Threading.Tasks.Task CancelTicketAsync(int Id) {
            return base.Channel.CancelTicketAsync(Id);
        }
    }
}
