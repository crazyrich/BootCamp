//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/MovieService")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleasedateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Releasedate {
            get {
                return this.ReleasedateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleasedateField, value) != true)) {
                    this.ReleasedateField = value;
                    this.RaisePropertyChanged("Releasedate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMovieServiceLibrary")]
    public interface IMovieServiceLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServiceLibrary/GetAllMovie", ReplyAction="http://tempuri.org/IMovieServiceLibrary/GetAllMovieResponse")]
        System.Collections.Generic.List<MovieClient.ServiceReference1.Movie> GetAllMovie();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServiceLibrary/GetMovie", ReplyAction="http://tempuri.org/IMovieServiceLibrary/GetMovieResponse")]
        MovieClient.ServiceReference1.Movie GetMovie(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServiceLibrary/RemoveMovie", ReplyAction="http://tempuri.org/IMovieServiceLibrary/RemoveMovieResponse")]
        void RemoveMovie(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServiceLibrary/EditMovie", ReplyAction="http://tempuri.org/IMovieServiceLibrary/EditMovieResponse")]
        void EditMovie(int Id, MovieClient.ServiceReference1.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServiceLibrary/AddMovie", ReplyAction="http://tempuri.org/IMovieServiceLibrary/AddMovieResponse")]
        void AddMovie(MovieClient.ServiceReference1.Movie movie);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieServiceLibraryChannel : MovieClient.ServiceReference1.IMovieServiceLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieServiceLibraryClient : System.ServiceModel.ClientBase<MovieClient.ServiceReference1.IMovieServiceLibrary>, MovieClient.ServiceReference1.IMovieServiceLibrary {
        
        public MovieServiceLibraryClient() {
        }
        
        public MovieServiceLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieServiceLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<MovieClient.ServiceReference1.Movie> GetAllMovie() {
            return base.Channel.GetAllMovie();
        }
        
        public MovieClient.ServiceReference1.Movie GetMovie(int Id) {
            return base.Channel.GetMovie(Id);
        }
        
        public void RemoveMovie(int Id) {
            base.Channel.RemoveMovie(Id);
        }
        
        public void EditMovie(int Id, MovieClient.ServiceReference1.Movie movie) {
            base.Channel.EditMovie(Id, movie);
        }
        
        public void AddMovie(MovieClient.ServiceReference1.Movie movie) {
            base.Channel.AddMovie(movie);
        }
    }
}
