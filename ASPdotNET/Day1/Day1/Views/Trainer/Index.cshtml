@*model is a variable here*@

@model IEnumerable<Day1.Models.Trainer>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@Html.ActionLink("Add New Trainer","Create");

<h4>List Of Trainers :</h4>
<table width="100%">
 <tr>
     <td>
         @*//needs delegate type argument So,giving lambda expression
         --where also needs a lambda expression where(m=>m.ID==id) *@
         @Html.DisplayNameFor(model => model.Id)@*display picks the property*@
     </td>
     <td>
         @Html.DisplayNameFor(model=>model.Name)
     </td>
     <td></td>
     <td></td>
     <td></td>

 </tr>
    @* Fetching the data from model *@
    @foreach(var trainerItem in Model)
    {
      <tr>
          <td>@Html.DisplayFor(x=> trainerItem.Id)</td>
           <td>@Html.DisplayFor(x=> trainerItem.Name)</td>
          <td>@Html.ActionLink("Details", "Details", new { Id=trainerItem.Id})</td>
          <td>@Html.ActionLink("Edit", "Edit", new { Id=trainerItem.Id})</td>
          <td>@Html.ActionLink("Delete", "Delete", new { Id=trainerItem.Id})</td>


      </tr>
    }
</table>
