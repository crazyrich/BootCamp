using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using System.Reflection;
using EmployeeLib;
using System.Runtime.InteropServices;

namespace ConsoleApplication1
{
    [AttributeUsage(AttributeTargets.Class)]
    public class BugAttribute : Attribute
    {
        private int bugcode;
        private string description;
        public BugAttribute(int bcode, string desc)
        {
            this.bugcode = bcode;
            this.description = desc;
            Console.WriteLine("Inside Attribute Constructor");
        }
        public int Bugcode
        {
            get { return bugcode; }
        }
        public string Description
        {
            get { return description; }
        }
    }

    [Bug(101, "Database Bug")]
    public class Tester
    {
        public void LogError()
        {
            var obj = new { name = "mohit", id = 1234 };
            Console.WriteLine(obj.name + " " + obj.id);
        }
    }


    class CustomAttribute
    {
        public static void Main(string[] args)
        {
            Tester obj = new Tester();
            obj.LogError();
            var attributes = obj.GetType().GetCustomAttributes(true);
            foreach (var att in attributes)
            {
                BugAttribute b =  att as BugAttribute  ;
                if (b != null)
                {
                    Console.WriteLine(b.Bugcode + "<>" + b.Description);
                }
            }
            Console.ReadLine();
        }
    }
}using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            #region Format Exception

            try
            {
                Console.WriteLine("Enter Age ");
                int age = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Age is " + age);
            }
            catch(FormatException fe)
            {
                Console.WriteLine("Invalid value to convert to Int ");
            }
            
            #endregion


            #region   Connection Exception
            try
            {
                SqlConnection connection = new SqlConnection();
                connection.ConnectionString = "Data Source=LP-ASHOKSH\\SQLSERVER2008;Initial Catalog=ashok1231;user id =sa;password=info123!";
                connection.Open();
            }
            catch(SqlException se)
            {
                Console.WriteLine( "Invalid value is connection string");
            }
            #endregion


            #region Divide by Zero Exception
            try
            {
                int a = 10;
                int b = 0;
                Console.WriteLine(a / b);
            }
            catch(DivideByZeroException de)
            {
                Console.WriteLine("Cant divide value by Zero ");
            }
            #endregion


            #region Array out of bound Exception
            try
            {
                int[] array = { 1, 2, 3, 4 };
                int counter = 0;
                while (counter < 5)
                {
                    Console.WriteLine(array[counter]);
                    counter++;
                }
            }
            catch(IndexOutOfRangeException ie)
            {
                Console.WriteLine("Invalid position of array is located ");
            }
            #endregion


            Console.WriteLine("Code is Over ");
        }
    }
}


=====================================

using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
           

            try
            {
                Console.WriteLine("Enter Age ");
                int age = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Age is " + age);


                #region connection exception
                SqlConnection connection = new SqlConnection();
                connection.ConnectionString = "Data Source=LP-ASHOKSH\\SQLSERVER2008;Initial Catalog=ashok11111;user id =sa;password=info123!";
                connection.Open();
                Console.WriteLine("Connecction Part");
                #endregion


                #region Divide by Zero Exception
                int a = 10;
                int b = 10;
                Console.WriteLine(a / b);
                Console.WriteLine("Division Part");
                #endregion


                #region Array out of bound Exception
                int[] array = { 1, 2, 3, 4 };
                int counter = 0;
                while (counter < 4)
                {
                    Console.WriteLine(array[counter]);
                    counter++;
                }
                Console.WriteLine("Array Part ");
                #endregion
            }
            catch (FormatException fe)
            {
                Console.WriteLine("value not convertable to integer");
            }
            catch (DivideByZeroException de)
            {
                Console.WriteLine("cant divide by zero");
            }
            catch (Exception se)
            {
                Console.WriteLine("I am Catch ");
            }
            
           

                Console.WriteLine("Code is Over ");
            }
        }
    }
 

=========================
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
           

            try
            {
                Console.WriteLine("Enter Age ");
                int age = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Age is " + age);


                #region connection exception
                SqlConnection connection = new SqlConnection();
                connection.ConnectionString = "Data Source=LP-ASHOKSH\\SQLSERVER2008;Initial Catalog=ashok11111;user id =sa;password=info123!";
                connection.Open();
                Console.WriteLine("Connecction Part");
                #endregion


                #region Divide by Zero Exception
                int a = 10;
                int b = 10;
                Console.WriteLine(a / b);
                Console.WriteLine("Division Part");
                #endregion


                #region Array out of bound Exception
                int[] array = { 1, 2, 3, 4 };
                int counter = 0;
                while (counter < 4)
                {
                    Console.WriteLine(array[counter]);
                    counter++;
                }
                Console.WriteLine("Array Part ");
                #endregion
            }            
            catch (Exception se)
            {
                Console.WriteLine("I am Catch..Exception in the code >>>>>>"+se.Message);
            }
            
           

                Console.WriteLine("Code is Over ");
            }
        }
    }

================================================
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication1
{

    class AgeException : Exception
    {
        public string Message
        {
            get
            {
                return "Age must be between 18-60";
            }
        }
    }







    class Program
    {
        static void Main(string[] args)
        {
           

            try
            {
                Console.WriteLine("Enter Age ");
                int age = Convert.ToInt32(Console.ReadLine());

                if (age < 18 || age > 60)
                    throw new AgeException();
                
                Console.WriteLine("Age is " + age+" and this is a valid age ");             
            }            
            catch (Exception se)
            {
                Console.WriteLine("I am Catch  >>>>>>"+se.Message);
            }
            finally
            {
                Console.WriteLine("I am Finally Block ");
            }
            
           

                Console.WriteLine("Code is Over ");
            }
        }
    }
 
 =======================================
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using System.Reflection;
using EmployeeLib;
using System.Runtime.InteropServices;

namespace ConsoleApplication1
{
    [AttributeUsage(AttributeTargets.Class)]
    public class BugAttribute : Attribute
    {
        private int bugcode;
        private string description;
        public BugAttribute(int bcode, string desc)
        {
            this.bugcode = bcode;
            this.description = desc;
            Console.WriteLine("Inside Attribute Constructor");
        }
        public int Bugcode
        {
            get { return bugcode; }
        }
        public string Description
        {
            get { return description; }
        }
    }

    [Bug(101, "Database Bug")]
    public class Tester
    {
        public void LogError()
        {
            var obj = new { name = "mohit", id = 1234 };
            Console.WriteLine(obj.name + " " + obj.id);
        }
    }


    class CustomAttribute
    {
        public static void Main(string[] args)
        {
            Tester obj = new Tester();
            obj.LogError();
            var attributes = obj.GetType().GetCustomAttributes(true);
            foreach (var att in attributes)
            {
                BugAttribute b =  att as BugAttribute  ;
                if (b != null)
                {
                    Console.WriteLine(b.Bugcode + "<>" + b.Description);
                }
            }
            Console.ReadLine();
        }
    }
}

==============================================
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using System.Reflection;
using EmployeeLib;
using System.Runtime.InteropServices;
using System.IO;

namespace ConsoleApplication1
{
    
 public class MainClass
 {
     public void WriteToStream( )
     {         
          int EmpID; string EmpName, Email;
         Console.WriteLine("Enter Emp ID");
         EmpID = Convert.ToInt32(Console.ReadLine());
         Console.WriteLine("Enter Emp Name");
         EmpName = Console.ReadLine();
         Console.WriteLine("Enter Emp Email");
         Email = Console.ReadLine();


         FileStream fs = new FileStream("C:\\a\\File1.txt",FileMode.Append,FileAccess.Write,FileShare.Write);
         StreamWriter sw = new StreamWriter(fs);
         sw.WriteLine(EmpID);
         sw.WriteLine(EmpName);
         sw.WriteLine(Email);
         sw.Close();
         fs.Close();
         Console.WriteLine("Data Writen to File");
     }

     public void ReadFromStream()
     {
         FileStream fs = new FileStream("C:\\a\\File1.txt", FileMode.Open, FileAccess.Read, FileShare.Read);
         StreamReader sr = new StreamReader(fs);         
         string line;
         while( (line=sr.ReadLine()) != null)
         {
             Console.WriteLine(line);
         }
         Console.WriteLine("-------------------------");
         sr.Close();
         fs.Close();
     }

     public void BinaryWrite()
     {
         FileStream fs = new FileStream("C:\\a\\File2.txt", FileMode.Append, FileAccess.Write, FileShare.Write);
         BinaryWriter bw = new BinaryWriter(fs);

         int empid = 1001;
         string name = "ram";
         bool married = true;
         double salary = 12345.324;

         bw.Write(empid);
         bw.Write(name);
         bw.Write(married);
         bw.Write(salary);

         bw.Close();
         fs.Close();
         Console.WriteLine("Data Writen to File");
     }
     public void BinaryRead()
     {
         FileStream fs = new FileStream("C:\\a\\File2.txt", FileMode.Open, FileAccess.Read, FileShare.Read);
         BinaryReader br = new BinaryReader(fs);
         Console.WriteLine("Emp ID " + br.ReadInt32());
         Console.WriteLine("Emp Name " +br.ReadString());
         Console.WriteLine("Emp Married " + br.ReadBoolean());
         Console.WriteLine("Emp Salary "+ br.ReadDouble());

         br.Close();
         fs.Close();
     }
     public void DirectoryIn()
     {
         DirectoryInfo dir = new DirectoryInfo("c:\\");
         foreach (var item in dir.GetDirectories())
         {
             Console.WriteLine(item.FullName);
         }
     }



     public static void Main()
     {
        

         MainClass obj = new MainClass();
       //  obj.WriteToStream( );
         //obj.ReadFromStream();
       //  obj.BinaryWrite();
       //  obj.BinaryRead();
         obj.DirectoryIn();
     }
 }    
 
}

===============================

using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using System.Reflection;
using EmployeeLib;
using System.Runtime.InteropServices;
using System.IO;

namespace ConsoleApplication1
{
    public class Product
    {
        public string prodID;
        public int qty;
        public void Show()
        {
            Console.WriteLine("Product Details are Here ");
            Console.WriteLine("Prod ID "+ prodID);            
            Console.WriteLine("Prod Qty " + qty);
        }
     public static Product operator +(Product p1, Product p2)
     {
         Product p = new Product();
         p.qty = p1.qty + p2.qty;
         return p;
     }
     public static void Main()
     {
         Product mobile = new Product() { prodID = "P001", qty = 10 };
         Product laptop = new Product() { prodID = "P002", qty = 2 };

         Product finalProducts = mobile + laptop;
             Console.WriteLine("Final Quantity Count "+ finalProducts.qty);
     }
 }    
 
}

========================
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using System.Reflection;
using EmployeeLib;
using System.Runtime.InteropServices;
using System.IO;

namespace ConsoleApplication1
{
    public class Product
    {
        public string prodID;
        public double qty,price;
        public void Show()
        {
            Console.WriteLine("Product Details are Here ");
            Console.WriteLine("Prod ID "+ prodID);            
            Console.WriteLine("Prod Qty " + qty);
            Console.WriteLine("Prod Price " + price);
        }
     public static Product operator +(Product p1, Product p2)
     {
         Product p = new Product();
         double p1cost = p1.price * p1.qty;
         double p2cost = p2.price * p2.qty;


         p.qty = p1.qty + p2.qty;
         p.price = p1cost + p2cost;

         return p;
     }




     public static void Main()
     {
         Product mobile = new Product() { prodID = "P001", qty = 10, price=4000 };
         Product laptop = new Product() { prodID = "P002", qty = 2 , price=40000};

         Product finalProducts = mobile + laptop;

         finalProducts.Show();
        //Console.WriteLine("Final Quantity Count "+ finalProducts.qty);
        //Console.WriteLine("Final Bill Amount " + finalProducts.price);
     }
 }    
 
}